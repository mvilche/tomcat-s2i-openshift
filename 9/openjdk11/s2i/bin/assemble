#!/bin/bash -e
#
# S2I assemble script for the 's2i-maven-java' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

set -e


shopt -u dotglob


if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

if [ ! -f /tmp/src/pom.xml ]; then

if [ ! -f /tmp/src/build.gradle ]; then
  echo "FATAL - No build.gradle or pom.xml found"
  exit 1
fi

fi


if [ -d /tmp/artifacts/.m2 ]; then
  echo "---> Restoring build maven artifacts..."
  mv /tmp/artifacts/.m2 /home/s2i/
  rm -rf /tmp/artifacts
fi

if [ -d /tmp/artifacts/.gradle ]; then
  echo "---> Restoring build gradle artifacts..."
  mv /tmp/artifacts/.gradle /home/s2i/
  rm -rf /tmp/artifacts
fi

echo "---> INSTALANDO CODIGO FUENTE..."
mkdir /opt/src
cp -Rf /tmp/src/* /opt/src/

if [ -z "$TAG_VERSION" ]; then
  echo "NO VARIABLE TAG_VERSION ENCONTRADA USANDO latest"
else

echo "VARIABLE TAG_VERSION ENCONTRADA USANDO: $TAG_VERSION"
echo $TAG_VERSION > /opt/version
fi


if [ -z "$NEXUS_MIRROR_URL" ]; then
echo "NO NEXUS_MIRROR_URL ENCONTRADO"
else
echo "NEXUS_MIRROR_URL ENCONTRADO - AGREGANDO REPOSITORIO"

if [ ! -d /home/s2i/.m2 ]; then
  mkdir /home/s2i/.m2
  touch /home/s2i/.m2/settings.xml
fi
cat << EOF > /home/s2i/.m2/settings.xml
<?xml version="1.0" encoding="UTF-8"?>
<settings>
  <mirrors>
    <mirror>
      <id>central</id>
      <name>central</name>
      <url>$NEXUS_MIRROR_URL</url>
      <mirrorOf>*</mirrorOf>
    </mirror>
  </mirrors>
</settings>
EOF
fi


if [ -f /opt/src/pom.xml ]; then
echo "---> COMPILANDO CODIGO FUENTE..."
cd /opt/src && mvn clean package -Dfile.encoding=UTF-8 ${MVN_OPTS}

ERR=$?
    if [ $ERR -ne 0 ]; then
echo "LA COMPILACION SALIO CON CODIGO DE ERROR $ERR"
exit $ERR

fi
fi

if [ -f /opt/src/build.gradle ]; then
echo "---> COMPILANDO CODIGO FUENTE..."
cd /opt/src && gradle clean build

ERR=$?
    if [ $ERR -ne 0 ]; then
echo "LA COMPILACION SALIO CON CODIGO DE ERROR $ERR"
exit $ERR

fi
fi



echo "---> COPIANDO APLICACION GENERADA AL DIRECTORIO DE DEPLOY..."
cd /opt/src && find . -name '*.war' | xargs cp -t /opt/tomcat/webapps  && echo "APP INSTALADA!"

ls -1 /opt/tomcat/webapps/

echo "---> GENERANDO HEALTH CHECK"
mkdir -p /opt/tomcat/webapps/health
cat << EOF > /opt/tomcat/webapps/health/index.html
<h1 style="color: #5e9ca0;">APACHE TOMCAT IS READY!</h1>
EOF


if [ ! -z "$MKDOCS_DIR" ]; then
echo "---> MKDOCS_DIR ENCONTRADO - GENERANDO DOCUMENTACION"

if [ ! -d "/opt/src/$MKDOCS_DIR" ]; then
echo "---> ERROR - MKDOCS_DIR NO EXISTE - SALIENDO"
exit 1
fi

cd /opt/src/$MKDOCS_DIR && mkdocs build -v -d generate_docs
if [ ! -z "$MKDOCS_CONTEXT_PATH" ]; then
echo "---> MKDOCS_CONTEXT_PATH ENCONTRADO - USANDO CONTEXT PATH /$MKDOCS_CONTEXT_PATH"
cp -rf /opt/src/$MKDOCS_DIR/generate_docs /opt/tomcat/webapps/$MKDOCS_CONTEXT_PATH
else
echo "---> MKDOCS_CONTEXT_PATH NO ENCONTRADO - DESPLEGANDO DOCUMENTACION EN /"
cp -rf /opt/src/$MKDOCS_DIR/generate_docs /opt/tomcat/webapps/ROOT
fi
echo "---> DOCUMENTACION GENERADA!"
fi
cd $HOME && rm -rf /opt/src
/usr/libexec/s2i/fix /opt/tomcat

echo "---> TODAS LAS TAREAS FUERON COMPLETADAS!"